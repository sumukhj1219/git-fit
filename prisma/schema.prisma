// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? // @db.Text
    access_token             String? // @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? // @db.Text
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    refresh_token_expires_in Int?

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id            String         @id @default(cuid())
    name          String?
    email         String?        @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Payments      Payments[]
    Subscription  Subscription[]
    Plan          Plan?          @relation(fields: [planId], references: [id])
    planId        String?
}

model Payments {
    id            String   @id @default(cuid())
    userId        String
    user          User     @relation(fields: [userId], references: [id])
    razorpayPayId String   @unique
    amount        Int
    currency      String   @default("INR")
    status        String // success, failed, refunded
    createdAt     DateTime @default(now())
}

model Subscription {
    id               String   @id @default(cuid())
    userId           String
    razorpaySubId    String   @unique
    status           String // active, cancelled, etc.
    currentPeriodEnd DateTime
    user             User     @relation(fields: [userId], references: [id])
}

model Plan {
    id          String  @id @default(cuid())
    name        String
    price       Int // in paise for Razorpay (e.g., â‚¹99 = 9900)
    interval    String // "monthly", "yearly", etc.
    description String?
    User        User[]
}
